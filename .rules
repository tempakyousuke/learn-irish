- プログラミングの知見を探す際に多くの場合、英語で探した方がドキュメントが多く見つかります。私は日本語で質問や指示を行うことが多いですが、webで検索をする際に私が使う日本語の用語等をそのままキーワードで使わず英語を利用することを検討してください。
- ディレクトリ構造を確認する際には./docs/project-structure.mdを読むこと
- コード修正は段階的に行うこと：
  1. 一度に多くの変更を行わず、小さな単位で修正する
  2. 各修正後にテストを行い、問題がないことを確認してから次の修正に進む
  3. 大きなリファクタリングは複数のステップに分割し、各ステップで動作確認を行う
  4. 複数のファイルに影響する変更は、依存関係を考慮して順序立てて実施する
  5. コンポーネント抽出や機能移動を行う場合は、まず現在の機能を複製してから古い実装を削除する
- コード変更後の検証手順：
  1. 必ず`diagnostics`ツールを使用してTypeScriptやESLintのエラーがないか確認する
  2. コードを変更したファイルだけでなく、関連するファイルも合わせてエラーチェックを行う
  3. 型エラーは無視せず、すぐに修正する（型安全性はプロジェクトの品質を保証する重要な要素）
  4. エラーの意味を正確に理解し、適切な修正方法を選択する
  5. 未使用のインポートや変数を残さない
